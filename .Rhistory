install.packages("tidyverse")
library(tidyverse)
#load data
dat<-readxl("C:\\Users\\xsm7f\\OneDrive - University of Missouri\\#Grants\\Analyses\\ALS_registry_data.xlsx")
library(readxl)
#load data
dat<-readxl("C:\\Users\\xsm7f\\OneDrive - University of Missouri\\#Grants\\Analyses\\ALS_registry_data.xlsx")
#load data
dat<-read_excel("C:\\Users\\xsm7f\\OneDrive - University of Missouri\\#Grants\\Analyses\\ALS_registry_data.xlsx")
#load data
dat<-read_xlsx("C:\\Users\\xsm7f\\OneDrive - University of Missouri\\#Grants\\Analyses\\ALS_registry_data.xlsx")
#load data
dat<-read_xlsx("C:\\Users\\xsm7f\\OneDrive - University of Missouri\\#Grants\\Analyses\\ALS_registry_data.xlsx")
#load data
onedrive_root<-file.path("/C:","Users",
"xsm7f", #user1
# "sxing" #user2
)
#load data
onedrive_root<-file.path("/C:","Users",
"xsm7f" #user1
# "sxing" #user2
)
#load data
onedrive_root<-file.path("/C:","Users",
"xsm7f" #user1
# "sxing" #user2
)
alsa_dat<-read_xlsx(file.path(onedrive_root,
"OneDrive - University of Missouri",
"#Grants",
"Analyses",
"ALS_registry_data.xlsx"))
alsa_dat<-read_xlsx(file.path(onedrive_root,
"OneDrive - University of Missouri",
"#Grants",
"Analyses",
"ALS_registry_data.xlsx"))
alsa_dat<-read_xlsx(file.path(onedrive_root,
"OneDrive - University of Missouri",
"#Grants",
"Analyses",
"ALSA Mid America dataset 112520.xlsx"))
#load data
onedrive_root<-file.path("C:","Users",
"xsm7f" #user1
# "sxing" #user2
)
alsa_dat<-read_xlsx(file.path(onedrive_root,
"OneDrive - University of Missouri",
"#Grants",
"Analyses",
"ALSA Mid America dataset 112520.xlsx"))
alsa_dat<-read_xlsx(file.path(onedrive_root,
"OneDrive - University of Missouri",
"#Grants",
"Analyses",
"ALS_registry_data",
"ALSA Mid America dataset 112520.xlsx"))
#load data
onedrive_root<-file.path("/C:","Users",
"xsm7f" #user1
# "sxing" #user2
)
alsa_dat<-read_xlsx(file.path(onedrive_root,
"OneDrive - University of Missouri",
"#Grants",
"Analyses",
"ALS_registry_data",
"ALSA Mid America dataset 112520.xlsx"))
#load data
onedrive_root<-file.path("C:","Users",
"xsm7f" #user1
# "sxing" #user2
)
alsa_dat<-read_xlsx(file.path(onedrive_root,
"OneDrive - University of Missouri",
"#Grants",
"Analyses",
"ALS_registry_data",
"ALSA Mid America dataset 112520.xlsx"))
View(alsa_dat)
desc(alsa_dat)
descr(alsa_dat)
str(alsa_dat)
alsa_dat<-read_xlsx(file.path(onedrive_root,
"OneDrive - University of Missouri",
"#Grants",
"Analyses",
"ALS_registry_data",
"ALSA Mid America dataset 112520.xlsx")) %>%
select(`Age at diagnosis`,`Diagnosis to death`)
alsa_dat<-read_xlsx(file.path(onedrive_root,
"OneDrive - University of Missouri",
"#Grants",
"Analyses",
"ALS_registry_data",
"ALSA Mid America dataset 112520.xlsx")) %>%
select(`Age at diagnosis`,`Diagnosis to death (m)`)
View(alsa_dat)
alsa_dat<-read_xlsx(file.path(onedrive_root,
"OneDrive - University of Missouri",
"#Grants",
"Analyses",
"ALS_registry_data",
"ALSA Mid America dataset 112520.xlsx")) %>%
select(State,`Age at diagnosis`,`Diagnosis to death (m)`) %>%
l
alsa_dat<-read_xlsx(file.path(onedrive_root,
"OneDrive - University of Missouri",
"#Grants",
"Analyses",
"ALS_registry_data",
"ALSA Mid America dataset 112520.xlsx")) %>%
select(State,`Age at diagnosis`,`Diagnosis to death (m)`)
table(alsa_dat$State)
yr<-c(2,3,5)
surv<-c(0.5,0.3,0.2)
time_rg<-c(c(1,3),c(3,5),c(5,10))
N<-nrow(alsa_dat)
alsa_sim<-c()
for(i in seq_along(yr)){
n<-floor(yr[i]/10*N*surv[i]/(1-surv[i]))
alsa_sim %<>%
bind_rows(data.frame(row_id=1:n,
time=runif(n,time_rg[i])))
}
library(magrittr)
alsa_sim<-c()
for(i in seq_along(yr)){
n<-floor(yr[i]/10*N*surv[i]/(1-surv[i]))
alsa_sim %<>%
bind_rows(data.frame(row_id=1:n,
time=runif(n,time_rg[i])))
}
View(alsa_sim)
i
time_rg[i]
time_rg<-c(c(1,3),c(3,5),c(5,10))
time_rg[i]
time_rg<-list(c(1,3),c(3,5),c(5,10))
time_rg[[i]]
yr<-c(2,3,5)
surv<-c(0.5,0.3,0.2)
time_rg<-list(c(1,3),c(3,5),c(5,10))
N<-nrow(alsa_dat)
alsa_sim<-c()
for(i in seq_along(yr)){
n<-floor(yr[i]/10*N*surv[i]/(1-surv[i]))
alsa_sim %<>%
bind_rows(data.frame(row_id=1:n,
time=runif(n,time_rg[[i]])))
}
View(alsa_sim)
yr<-c(2,3,5)
surv<-c(0.5,0.3,0.2)
time_rg<-list(c(1,3),c(3,5),c(5,10))
N<-nrow(alsa_dat)
alsa_sim<-c()
for(i in seq_along(yr)){
n<-floor(yr[i]/10*N*surv[i]/(1-surv[i]))
alsa_sim %<>%
bind_rows(data.frame(row_id=1:n,
time=runif(n,time_rg[[i]][1],time_rg[[i]][2])))
}
View(alsa_sim)
?runif
yr<-c(2,3,5)
surv<-c(0.5,0.3,0.2)
time_rg<-list(c(1,3),c(3,5),c(5,10))
N<-nrow(alsa_dat)
alsa_sim<-c()
for(i in seq_along(yr)){
n<-floor(yr[i]/10*N*surv[i]/(1-surv[i]))
alsa_sim %<>%
bind_rows(data.frame(row_id=1:n,
time=sample(time_rg[[i]][1]:time_rg[[i]][2],n,replace=T)))
}
View(alsa_sim)
library(survival)
library(survminer)
install.packages("survminer")
library(survminer)
alsa_dat<-read_xlsx(file.path(onedrive_root,
"OneDrive - University of Missouri",
"#Grants",
"Analyses",
"ALS_registry_data",
"ALSA Mid America dataset 112520.xlsx")) %>%
select(`Diagnosis to death (m)`) %>%
mutate(row_id=1:n(),
time=`Diagnosis to death (m)`,
status=1)
yr<-c(2,3,5)
surv<-c(0.5,0.3,0.2)
time_rg<-list(c(1,3),c(3,5),c(5,10))
N<-nrow(alsa_dat)
alsa_sim<-c()
n0<-N
for(i in seq_along(yr)){
n<-floor(yr[i]/10*N*surv[i]/(1-surv[i]))
alsa_sim %<>%
bind_rows(data.frame(row_id=(n0+1):(n0+n),
time=sample(time_rg[[i]][1]:time_rg[[i]][2],n,replace=T)))
n0<-max(alsa_sim$row_id)
}
alsa_aug<-alsa_dat %>%
bind_rows(alsa_sim %>% mutate(status=0))
#sanity check
ggsurvplot(
fit = survfit(Surv(time, status) ~ 1, data = alsa_aug),
xlab = "Months",
ylab = "Overall survival probability")
View(alsa_sim)
View(alsa_aug)
yr<-c(2,3,5)
surv<-c(0.5,0.3,0.2)
time_rg<-list(c(1,3),c(3,5),c(5,10))
N<-nrow(alsa_dat)
alsa_sim<-c()
n0<-N
for(i in seq_along(yr)){
n<-floor(yr[i]/10*N*surv[i]/(1-surv[i])*12)
alsa_sim %<>%
bind_rows(data.frame(row_id=(n0+1):(n0+n),
time=sample(time_rg[[i]][1]:time_rg[[i]][2],n,replace=T)))
n0<-max(alsa_sim$row_id)
}
alsa_aug<-alsa_dat %>%
bind_rows(alsa_sim %>% mutate(status=0))
#sanity check
ggsurvplot(
fit = survfit(Surv(time, status) ~ 1, data = alsa_aug),
xlab = "Months",
ylab = "Overall survival probability")
summary(survfit(Surv(time, status) ~ 1, data = alsa_aug))
plot(survfit(Surv(time, status) ~ 1, data = alsa_aug))
survfit(Surv(time, status) ~ 1, data = alsa_aug)
survfit(Surv(time, status) ~ 1, data = alsa_dat)
i<-1
floor(yr[i]/10*N*surv[i]/(1-surv[i])*12)
yr[i]/10
yr[i]/10*N
median(alsa_dat$time)
mean(alsa_dat$time)
hist(alsa_dat$time)
yr<-c(2,3,5)
surv<-c(0.5,0.3,0.2)
time_rg<-list(c(3,20),c(5,20),c(10,20))
N<-nrow(alsa_dat)
alsa_sim<-c()
n0<-N
for(i in seq_along(yr)){
n<-floor(yr[i]/10*N*surv[i]/(1-surv[i]))
alsa_sim %<>%
bind_rows(data.frame(row_id=(n0+1):(n0+n),
time=sample(time_rg[[i]][1]:time_rg[[i]][2],n,replace=T)*12))
n0<-max(alsa_sim$row_id)
}
alsa_aug<-alsa_dat %>%
bind_rows(alsa_sim %>% mutate(status=0))
#sanity check
ggsurvplot(
fit = survfit(Surv(time, status) ~ 1, data = alsa_aug),
xlab = "Months",
ylab = "Overall survival probability")
survfit(Surv(time, status) ~ 1, data = alsa_aug)
yr<-c(2,3,5)
surv<-c(0.5,0.3,0.2)
time_rg<-list(c(3,10),c(5,10),c(10,10))
N<-nrow(alsa_dat)
alsa_sim<-c()
n0<-N
for(i in seq_along(yr)){
n<-floor(yr[i]/10*N*surv[i]/(1-surv[i]))
alsa_sim %<>%
bind_rows(data.frame(row_id=(n0+1):(n0+n),
time=sample(time_rg[[i]][1]:time_rg[[i]][2],n,replace=T)*12))
n0<-max(alsa_sim$row_id)
}
alsa_aug<-alsa_dat %>%
bind_rows(alsa_sim %>% mutate(status=0))
#sanity check
ggsurvplot(
fit = survfit(Surv(time, status) ~ 1, data = alsa_aug),
xlab = "Months",
ylab = "Overall survival probability")
survfit(Surv(time, status) ~ 1, data = alsa_aug)
yr<-c(2,3,5)
surv<-c(0.5,0.3,0.2)
time_rg<-list(c(3,10),c(5,10),c(10,20))
N<-nrow(alsa_dat)
alsa_sim<-c()
n0<-N
for(i in seq_along(yr)){
n<-floor(yr[i]/10*N*surv[i]/(1-surv[i]))
alsa_sim %<>%
bind_rows(data.frame(row_id=(n0+1):(n0+n),
time=sample(time_rg[[i]][1]:time_rg[[i]][2],n,replace=T)*12))
n0<-max(alsa_sim$row_id)
}
alsa_aug<-alsa_dat %>%
bind_rows(alsa_sim %>% mutate(status=0))
#sanity check
ggsurvplot(
fit = survfit(Surv(time, status) ~ 1, data = alsa_aug),
xlab = "Months",
ylab = "Overall survival probability")
survfit(Surv(time, status) ~ 1, data = alsa_aug)
#save augmented sample
write.csv(alsa_aug,file="./alsa_augmented.csv",row.names = F)
getwd()
yr<-c(2,3,5)
surv<-c(0.5,0.3,0.2)
time_rg<-list(c(1,10),c(3,10),c(5,10))
N<-nrow(alsa_dat)
alsa_sim<-c()
n0<-N
for(i in seq_along(yr)){
n<-floor(yr[i]/10*N*surv[i]/(1-surv[i]))
alsa_sim %<>%
bind_rows(data.frame(row_id=(n0+1):(n0+n),
time=sample(time_rg[[i]][1]:time_rg[[i]][2],n,replace=T)*12))
n0<-max(alsa_sim$row_id)
}
alsa_aug<-alsa_dat %>%
bind_rows(alsa_sim %>% mutate(status=0))
#sanity check
ggsurvplot(
fit = survfit(Surv(time, status) ~ 1, data = alsa_aug),
xlab = "Months",
ylab = "Overall survival probability")
survfit(Surv(time, status) ~ 1, data = alsa_aug)
#save augmented sample
write.csv(alsa_aug,file="./alsa_augmented.csv",row.names = F)
yr<-c(2,3,5)
surv<-c(0.5,0.3,0.2)
time_rg<-list(c(1,3),c(3,5),c(5,10))
N<-nrow(alsa_dat)
alsa_sim<-c()
n0<-N
for(i in seq_along(yr)){
n<-floor(yr[i]/10*N*surv[i]/(1-surv[i]))
alsa_sim %<>%
bind_rows(data.frame(row_id=(n0+1):(n0+n),
time=sample(time_rg[[i]][1]:time_rg[[i]][2],n,replace=T)*12))
n0<-max(alsa_sim$row_id)
}
alsa_aug<-alsa_dat %>%
bind_rows(alsa_sim %>% mutate(status=0))
#sanity check
ggsurvplot(
fit = survfit(Surv(time, status) ~ 1, data = alsa_aug),
xlab = "Months",
ylab = "Overall survival probability")
survfit(Surv(time, status) ~ 1, data = alsa_aug)
yr<-c(2,3,5)
surv<-c(0.5,0.3,0.2)
time_rg<-list(c(1,5),c(3,10),c(5,15))
N<-nrow(alsa_dat)
alsa_sim<-c()
n0<-N
for(i in seq_along(yr)){
n<-floor(yr[i]/10*N*surv[i]/(1-surv[i]))
alsa_sim %<>%
bind_rows(data.frame(row_id=(n0+1):(n0+n),
time=sample(time_rg[[i]][1]:time_rg[[i]][2],n,replace=T)*12))
n0<-max(alsa_sim$row_id)
}
alsa_aug<-alsa_dat %>%
bind_rows(alsa_sim %>% mutate(status=0))
#sanity check
ggsurvplot(
fit = survfit(Surv(time, status) ~ 1, data = alsa_aug),
xlab = "Months",
ylab = "Overall survival probability")
survfit(Surv(time, status) ~ 1, data = alsa_aug)
yr<-c(2,3,5)
surv<-c(0.5,0.3,0.2)
time_rg<-list(c(1,4),c(3,6),c(5,11))
N<-nrow(alsa_dat)
alsa_sim<-c()
n0<-N
for(i in seq_along(yr)){
n<-floor(yr[i]/10*N*surv[i]/(1-surv[i]))
alsa_sim %<>%
bind_rows(data.frame(row_id=(n0+1):(n0+n),
time=sample(time_rg[[i]][1]:time_rg[[i]][2],n,replace=T)*12))
n0<-max(alsa_sim$row_id)
}
alsa_aug<-alsa_dat %>%
bind_rows(alsa_sim %>% mutate(status=0))
#sanity check
ggsurvplot(
fit = survfit(Surv(time, status) ~ 1, data = alsa_aug),
xlab = "Months",
ylab = "Overall survival probability")
survfit(Surv(time, status) ~ 1, data = alsa_aug)
#save augmented sample
write.csv(alsa_aug,file="./alsa_augmented.csv",row.names = F)
getwd()
alsa_dat<-read_xlsx(file.path(onedrive_root,
"OneDrive - University of Missouri",
"#Grants",
"Analyses",
"ALS_registry_data",
"ALSA Mid America dataset 112520.xlsx")) %>%
select(`Diagnosis to death (m)`) %>%
mutate(row_id=1:n(),
status=1) %>%
renamce(time=`Diagnosis to death (m)`)
alsa_dat<-read_xlsx(file.path(onedrive_root,
"OneDrive - University of Missouri",
"#Grants",
"Analyses",
"ALS_registry_data",
"ALSA Mid America dataset 112520.xlsx")) %>%
select(`Diagnosis to death (m)`) %>%
mutate(row_id=1:n(),
status=1) %>%
rename(time=`Diagnosis to death (m)`)
survfit(Surv(time, status) ~ 1, data = alsa_dat)
yr<-c(2,3,5)
surv<-c(0.5,0.3,0.2)
time_rg<-list(c(1,4),c(3,6),c(5,11))
N<-nrow(alsa_dat)
alsa_sim<-c()
n0<-N
for(i in seq_along(yr)){
n<-floor(yr[i]/10*N*surv[i]/(1-surv[i]))
alsa_sim %<>%
bind_rows(data.frame(row_id=(n0+1):(n0+n),
time=sample(time_rg[[i]][1]:time_rg[[i]][2],n,replace=T)*12))
n0<-max(alsa_sim$row_id)
}
alsa_aug<-alsa_dat %>%
bind_rows(alsa_sim %>% mutate(status=0))
#sanity check
ggsurvplot(
fit = survfit(Surv(time, status) ~ 1, data = alsa_aug),
xlab = "Months",
ylab = "Overall survival probability")
survfit(Surv(time, status) ~ 1, data = alsa_aug)
#save augmented sample
write.csv(alsa_aug,file="./alsa_augmented.csv",row.names = F)
install.packages("DBI")
install
install.packages("ODBC")
install.packages("odbc")
install.packages("plotly")
install.packages("ggrepel")
install.packages("lightgbm")
install.packages("catboost")
install.packages("devtools")
Sys.getenv("JAVA_HOME")
Sys.setenv(JAVA_HOME="C:\\Program Files\\Java\\jre1.8.0_301\\")
Sys.getenv("JAVA_HOME")
devtools::install_github("snowflakedb/dplyr-snowflakedb")
devtools::install_github("snowflakedb/dplyr-snowflakedb")
getwd()
setwd("C:/repo/bioinformatics-research-lectures")
